% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/taxonSortPBDBocc.R
\name{taxonSortPBDBocc}
\alias{taxonSortPBDBocc}
\title{Sorting Unique Taxa of a Given Rank from Paleobiology Database Occurrence Data
Functions for sorting out unique taxa from Paleobiology Database occurrence downloads,
which should accept several different formats resulting from different versions of the
PBDB API and different vocabularies available from the API.}
\usage{
taxonSortPBDBocc(data, rank, onlyFormal = TRUE, cleanUncertain = TRUE,
  cleanResoValues = c(NA, "\\"", "", "n. sp.", "n. gen."))
}
\arguments{
\item{data}{A table of occurrence data collected from the Paleobiology Database.}

\item{rank}{The selected taxon rank; must be one of 'species', 'genus', 'family', 'order', 'class' or 'phylum'.}

\item{onlyFormal}{If TRUE (the default) only taxa formally accepted by the Paleobiology Database are returned. If FALSE, then the identified name fields are searched for any additional 'informal' taxa with the proper taxon. If their taxon name happens to match any formal taxa, their occurrences are merged onto the formal taxa. This argument generally has any appreciable effect when rank=species.}

\item{cleanUncertain}{If TRUE (the default) any occurrences with an entry in the respective 'resolution' field that is *not* found in the argument cleanResoValue will be removed from the dataset. These are assumed to be values indicating taxonomic uncertainty, i.e. 'cf.' or '?'.}

\item{cleanResoValue}{The set of values that can be found in a 'resolution' field that do not cause a taxon to be removed, as they do not seem to indicate taxonomic uncertainty.}
}
\value{
Returns a list where each element is different unique taxon obtained by the sorting function, and named with that taxon name. Each element is composed of a table containing all the same occurrence data fields as the input (potentially with some fields renamed and some field contents change, due to vocabulary translation).
}
\description{
Sorting Unique Taxa of a Given Rank from Paleobiology Database Occurrence Data
Functions for sorting out unique taxa from Paleobiology Database occurrence downloads,
which should accept several different formats resulting from different versions of the
PBDB API and different vocabularies available from the API.
}
\details{
Data input for \code{taxonSortPBDBocc} are expected to be from version 1.2 API
with the 'pbdb' vocabulary. However, datasets are passed to internal function \code{translatePBDBocc},
which attempts to correct any necessary field names and field contents used by
\code{taxonSortPBDBocc}.
}
\examples{
#load example graptolite PBDB occ dataset
data(graptPBDB)

#get formal genera
occGenus<-taxonSortPBDBocc(graptOccPBDB, rank="genus")
length(occGenus)

#get formal species
occSpeciesFormal<-taxonSortPBDBocc(graptOccPBDB, rank="species")
length(occSpeciesFormal)

#yes, there are fewer 'formal' graptolite species in the PBDB then genera

#get formal and informal species
occSpeciesInformal<-taxonSortPBDBocc(graptOccPBDB, rank="species",
	 onlyFormal=FALSE)
length(occSpeciesInformal)

#way more graptolite species are 'informal' in the PBDB

#get formal and informal species
	#including from occurrences with uncertain taxonomy
	#basically everything and the kitchen sink
occSpeciesEverything<-taxonSortPBDBocc(graptOccPBDB, rank="species",
		onlyFormal=FALSE, cleanUncertain=FALSE)
length(occSpeciesEverything)

donotrun{

#try a PBDB API download with lots of synonymization
	#this should have only 1 species
acoData<-read.csv(paste0("http://paleobiodb.org/data1.1/occs/list.txt?",
	"base_name=Acosarina\%20minuta&show=ident,phylo&limit=all"))
x<-taxonSortPBDBocc(acoData, rank="species", onlyFormal=FALSE)
names(x)

#make sure works with API v1.2
dicelloDataCom<-read.csv(paste0("http://testpaleodb.geology.wisc.edu",
	"/data1.2/occs/list.txt?base_name=Dicellograptus",
	"&show=ident,phylo&limit=all"))
dicelloOcc2<-taxonSortPBDBocc(dicelloDataCom, rank="species", onlyFormal=FALSE)
names(dicelloOcc2)

#make sure works with compact vocab v1.1
dicelloData<-read.csv(paste0("http://paleobiodb.org",
	"/data1.1/occs/list.txt?base_name=Dicellograptus",
	"&show=ident,phylo&limit=all&vocab=com"))
dicelloOccCom1<-taxonSortPBDBocc(dicelloData, rank="species", onlyFormal=FALSE)
names(dicelloOccCom1)
head(dicelloOccCom1[[1]])[,1:7]

#make sure works with compact vocab v1.2
dicelloDataCom<-read.csv(paste0("http://testpaleodb.geology.wisc.edu",
	"/data1.2/occs/list.txt?base_name=Dicellograptus",
	"&show=ident,phylo&limit=all&vocab=com"))
dicelloOccCom2<-taxonSortPBDBocc(dicelloDataCom, rank="species", onlyFormal=FALSE)
names(dicelloOccCom2)
head(dicelloOccCom2[[1]])[,1:7]


}
}
\author{
David W. Bapst, but partly inspired by Matthew Clapham's \code{cleanTaxon} (found at https://github.com/mclapham/PBDB-R-scripts/blob/master/taxonClean.R on github) and R package paleobioDB's \code{pbdb_temp_range} function (found at https://github.com/ropensci/paleobioDB/blob/master/R/pbdb_temporal_functions.R#L64-178 on github.
}
\seealso{
Example dataset of a PBDB download can be found at \code{\link{graptPBDB}}
}

